-- Tworzenie tabeli Categories
CREATE TABLE Categories (
    CategoryID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CategoryName VARCHAR(100) NOT NULL,
    Description TEXT,
    Picture BYTEA
);

-- Tworzenie tabeli CustomerDemographics
CREATE TABLE CustomerDemographics (
    CustomerTypeID INT PRIMARY KEY,
    CustomerDesc TEXT
);

-- Tworzenie tabeli Customers
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CompanyName VARCHAR(100) NOT NULL,
    ContactName VARCHAR(100),
    ContactTitle VARCHAR(100),
    Address VARCHAR(255),
    City VARCHAR(100),
    Region VARCHAR(100),
    PostalCode VARCHAR(20),
    Country VARCHAR(100),
    Phone VARCHAR(30),
    Fax VARCHAR(30)
);

-- Relacja wiele-do-wielu między Customers i CustomerDemographics
CREATE TABLE CustomerCustomerDemo (
    CustomerID INT,
    CustomerTypeID INT,
    PRIMARY KEY (CustomerID, CustomerTypeID),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (CustomerTypeID) REFERENCES CustomerDemographics(CustomerTypeID)
);

-- Tworzenie tabeli Employees
CREATE TABLE Employees (
    EmployeeID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    LastName VARCHAR(100),
    FirstName VARCHAR(100),
    Title VARCHAR(100),
    TitleOfCourtesy VARCHAR(100),
    BirthDate DATE,
    HireDate DATE,
    Address VARCHAR(255),
    City VARCHAR(100),
    Region VARCHAR(100),
    PostalCode VARCHAR(20),
    Country VARCHAR(100),
    HomePhone VARCHAR(30),
    Extension VARCHAR(10),
    Photo BYTEA,
    Notes TEXT,
    ReportsTo INT,
    PhotoPath VARCHAR(255),
    FOREIGN KEY (ReportsTo) REFERENCES Employees(EmployeeID)
);

-- Tworzenie tabeli Regions
CREATE TABLE Regions (
    RegionID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RegionDescription VARCHAR(100)
);

-- Tworzenie tabeli Territories
CREATE TABLE Territories (
    TerritoryID INT PRIMARY KEY,
    TerritoryDescription VARCHAR(100),
    RegionID INT,
    FOREIGN KEY (RegionID) REFERENCES Regions(RegionID)
);

-- Tworzenie tabeli EmployeeTerritories (wiele-do-wielu)
CREATE TABLE EmployeeTerritories (
    EmployeeID INT,
    TerritoryID INT,
    PRIMARY KEY (EmployeeID, TerritoryID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (TerritoryID) REFERENCES Territories(TerritoryID)
);

-- Tworzenie tabeli Shippers
CREATE TABLE Shippers (
    ShipperID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CompanyName VARCHAR(100),
    Phone VARCHAR(30)
);

-- Tworzenie tabeli Suppliers
CREATE TABLE Suppliers (
    SupplierID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CompanyName VARCHAR(100),
    ContactName VARCHAR(100),
    ContactTitle VARCHAR(100),
    Address VARCHAR(255),
    City VARCHAR(100),
    Region VARCHAR(100),
    PostalCode VARCHAR(20),
    Country VARCHAR(100),
    Phone VARCHAR(30),
    Fax VARCHAR(30),
    HomePage TEXT
);

-- Tworzenie tabeli Products
CREATE TABLE Products (
    ProductID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ProductName VARCHAR(100),
    SupplierID INT,
    CategoryID INT,
    QuantityPerUnit VARCHAR(50),
    UnitPrice NUMERIC(10, 2),
    UnitsInStock INT,
    UnitsOnOrder INT,
    ReorderLevel INT,
    Discontinued BOOLEAN,
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID),
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
);

-- Tworzenie tabeli Orders
CREATE TABLE Orders (
    OrderID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CustomerID INT,
    EmployeeID INT,
    OrderDate TIMESTAMP,
    RequiredDate TIMESTAMP,
    ShippedDate TIMESTAMP,
    ShipVia INT,
    Freight NUMERIC(10, 2),
    ShipName VARCHAR(100),
    ShipAddress VARCHAR(255),
    ShipCity VARCHAR(100),
    ShipRegion VARCHAR(100),
    ShipPostalCode VARCHAR(20),
    ShipCountry VARCHAR(100),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (ShipVia) REFERENCES Shippers(ShipperID)
);

-- Tworzenie tabeli OrderDetails (wiele-do-wiele między Orders a Products)
CREATE TABLE OrderDetails (
    OrderID INT,
    ProductID INT,
    UnitPrice NUMERIC(10, 2),
    Quantity INT,
    Discount REAL,
    PRIMARY KEY (OrderID, ProductID),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);
